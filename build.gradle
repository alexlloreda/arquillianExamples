apply plugin: 'java'
ext.publishUrl = ''
//apply from: 'http://devtools.dev.unico.com.au/nexus/content/repositories/unico-common/gradle/build/1.3/build-1.3-common.gradle'

repositories {
  mavenCentral()
  maven {url 'http://repository.jboss.org/nexus/content/groups/public'}
}

configurations {
    jboss
}

dependencies {
  compile(
    ['org.jboss.spec:jboss-javaee-6.0:3.0.3.Final']
  )
  testCompile(
    ['junit:junit:4.12'],
    // Arquillian framework
    ['org.jboss.arquillian.junit:arquillian-junit-container:1.1.8.Final'],
    //[group: 'org.jboss.arquillian', name: 'arquillian-bom', version: '1.1.8.Final'],
    [group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2'],
    [group: 'ch.qos.logback', name: 'logback-core', version: '1.1.2'],
    ['org.slf4j:slf4j-api:1.7.12'],
    [group: 'org.apache.maven.plugins', name:'maven-surefire-plugin', , version:'2.18.1'], 
  )
  testRuntime(
  // Container adaptor
    [group: 'org.jboss.as', name: 'jboss-as-arquillian-container-managed', version: '7.2.0.Final'],
    [group: 'org.jboss.arquillian.protocol', name:'arquillian-protocol-jmx', version:'1.1.10.Final'],
    [group: 'org.jboss.arquillian.protocol', name:'arquillian-protocol-servlet', version:'1.1.10.Final'],
    //['org.jboss.arquillian.container:arquillian-glassfish-embedded-3.1:1.0.+'],
    //['org.glassfish.main.extras:glassfish-embedded-all:3.1.+'],
    
  )
  //jboss "org.jboss.as:jboss-as-dist:7.1.1.Final@zip"
  //jboss "com.unico:jboss-eap:6.1@zip"
}

configurations.all {
    // The following is required to avoid having multiple SLF4j bindings in the classpath
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'log4j') {
            details.useTarget "ch.qos.logback:logback-classic:1.1.2"
        }
        if (details.requested.name == 'slf4j-log4j12') {
            details.useTarget "ch.qos.logback:logback-classic:1.1.2"
        }
    }
}

task unzip(
    type: Copy,
    dependsOn: 'copyDependencies',
    group: 'Test') {

    def zipFile = file("${buildDir}/target/jboss-eap-6.1.zip")
    def outputDir = file("${buildDir}/target")
    from zipTree(zipFile)
    into outputDir
}

task copyDependencies(type:Copy) {
    from configurations.jboss
    def outputDir = file("${buildDir}/target")
    into outputDir
}
